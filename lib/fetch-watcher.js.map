{"version":3,"sources":["webpack://fetchWatcher/webpack/bootstrap","webpack://fetchWatcher/./src/index.js","webpack://fetchWatcher/./node_modules/ramda/es/F.js","webpack://fetchWatcher/./node_modules/ramda/es/T.js","webpack://fetchWatcher/./node_modules/ramda/es/__.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isPlaceholder.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_curry1.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_curry2.js","webpack://fetchWatcher/./node_modules/ramda/es/add.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_concat.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_arity.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_curryN.js","webpack://fetchWatcher/./node_modules/ramda/es/curryN.js","webpack://fetchWatcher/./node_modules/ramda/es/addIndex.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_curry3.js","webpack://fetchWatcher/./node_modules/ramda/es/adjust.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isArray.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isTransformer.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_dispatchable.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_reduced.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xfBase.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xall.js","webpack://fetchWatcher/./node_modules/ramda/es/all.js","webpack://fetchWatcher/./node_modules/ramda/es/max.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_map.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isString.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isArrayLike.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xwrap.js","webpack://fetchWatcher/./node_modules/ramda/es/bind.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_reduce.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xmap.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_has.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isArguments.js","webpack://fetchWatcher/./node_modules/ramda/es/keys.js","webpack://fetchWatcher/./node_modules/ramda/es/map.js","webpack://fetchWatcher/./node_modules/ramda/es/path.js","webpack://fetchWatcher/./node_modules/ramda/es/prop.js","webpack://fetchWatcher/./node_modules/ramda/es/pluck.js","webpack://fetchWatcher/./node_modules/ramda/es/reduce.js","webpack://fetchWatcher/./node_modules/ramda/es/allPass.js","webpack://fetchWatcher/./node_modules/ramda/es/always.js","webpack://fetchWatcher/./node_modules/ramda/es/and.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xany.js","webpack://fetchWatcher/./node_modules/ramda/es/any.js","webpack://fetchWatcher/./node_modules/ramda/es/anyPass.js","webpack://fetchWatcher/./node_modules/ramda/es/ap.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_aperture.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xaperture.js","webpack://fetchWatcher/./node_modules/ramda/es/aperture.js","webpack://fetchWatcher/./node_modules/ramda/es/append.js","webpack://fetchWatcher/./node_modules/ramda/es/apply.js","webpack://fetchWatcher/./node_modules/ramda/es/values.js","webpack://fetchWatcher/./node_modules/ramda/es/applySpec.js","webpack://fetchWatcher/./node_modules/ramda/es/applyTo.js","webpack://fetchWatcher/./node_modules/ramda/es/ascend.js","webpack://fetchWatcher/./node_modules/ramda/es/assoc.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isInteger.js","webpack://fetchWatcher/./node_modules/ramda/es/isNil.js","webpack://fetchWatcher/./node_modules/ramda/es/assocPath.js","webpack://fetchWatcher/./node_modules/ramda/es/nAry.js","webpack://fetchWatcher/./node_modules/ramda/es/binary.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isFunction.js","webpack://fetchWatcher/./node_modules/ramda/es/liftN.js","webpack://fetchWatcher/./node_modules/ramda/es/lift.js","webpack://fetchWatcher/./node_modules/ramda/es/both.js","webpack://fetchWatcher/./node_modules/ramda/es/curry.js","webpack://fetchWatcher/./node_modules/ramda/es/call.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_makeFlat.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_flatCat.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_forceReduced.js","webpack://fetchWatcher/./node_modules/ramda/es/chain.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xchain.js","webpack://fetchWatcher/./node_modules/ramda/es/clamp.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_cloneRegExp.js","webpack://fetchWatcher/./node_modules/ramda/es/type.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_clone.js","webpack://fetchWatcher/./node_modules/ramda/es/clone.js","webpack://fetchWatcher/./node_modules/ramda/es/comparator.js","webpack://fetchWatcher/./node_modules/ramda/es/not.js","webpack://fetchWatcher/./node_modules/ramda/es/complement.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_pipe.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_checkForMethod.js","webpack://fetchWatcher/./node_modules/ramda/es/slice.js","webpack://fetchWatcher/./node_modules/ramda/es/tail.js","webpack://fetchWatcher/./node_modules/ramda/es/pipe.js","webpack://fetchWatcher/./node_modules/ramda/es/reverse.js","webpack://fetchWatcher/./node_modules/ramda/es/compose.js","webpack://fetchWatcher/./node_modules/ramda/es/composeK.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_pipeP.js","webpack://fetchWatcher/./node_modules/ramda/es/pipeP.js","webpack://fetchWatcher/./node_modules/ramda/es/composeP.js","webpack://fetchWatcher/./node_modules/ramda/es/nth.js","webpack://fetchWatcher/./node_modules/ramda/es/head.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_identity.js","webpack://fetchWatcher/./node_modules/ramda/es/identity.js","webpack://fetchWatcher/./node_modules/ramda/es/pipeWith.js","webpack://fetchWatcher/./node_modules/ramda/es/composeWith.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_includesWith.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_objectIs.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_equals.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_functionName.js","webpack://fetchWatcher/./node_modules/ramda/es/equals.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_indexOf.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_includes.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_quote.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_toISOString.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_complement.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_filter.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isObject.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xfilter.js","webpack://fetchWatcher/./node_modules/ramda/es/filter.js","webpack://fetchWatcher/./node_modules/ramda/es/reject.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_toString.js","webpack://fetchWatcher/./node_modules/ramda/es/toString.js","webpack://fetchWatcher/./node_modules/ramda/es/concat.js","webpack://fetchWatcher/./node_modules/ramda/es/cond.js","webpack://fetchWatcher/./node_modules/ramda/es/constructN.js","webpack://fetchWatcher/./node_modules/ramda/es/construct.js","webpack://fetchWatcher/./node_modules/ramda/es/contains.js","webpack://fetchWatcher/./node_modules/ramda/es/converge.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xreduceBy.js","webpack://fetchWatcher/./node_modules/ramda/es/reduceBy.js","webpack://fetchWatcher/./node_modules/ramda/es/countBy.js","webpack://fetchWatcher/./node_modules/ramda/es/dec.js","webpack://fetchWatcher/./node_modules/ramda/es/defaultTo.js","webpack://fetchWatcher/./node_modules/ramda/es/descend.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_Set.js","webpack://fetchWatcher/./node_modules/ramda/es/difference.js","webpack://fetchWatcher/./node_modules/ramda/es/differenceWith.js","webpack://fetchWatcher/./node_modules/ramda/es/dissoc.js","webpack://fetchWatcher/./node_modules/ramda/es/remove.js","webpack://fetchWatcher/./node_modules/ramda/es/update.js","webpack://fetchWatcher/./node_modules/ramda/es/dissocPath.js","webpack://fetchWatcher/./node_modules/ramda/es/divide.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xdrop.js","webpack://fetchWatcher/./node_modules/ramda/es/drop.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xtake.js","webpack://fetchWatcher/./node_modules/ramda/es/take.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_dropLast.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xdropLast.js","webpack://fetchWatcher/./node_modules/ramda/es/dropLast.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_dropLastWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xdropLastWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/dropLastWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack://fetchWatcher/./node_modules/ramda/es/last.js","webpack://fetchWatcher/./node_modules/ramda/es/dropRepeatsWith.js","webpack://fetchWatcher/./node_modules/ramda/es/dropRepeats.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xdropWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/dropWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/or.js","webpack://fetchWatcher/./node_modules/ramda/es/either.js","webpack://fetchWatcher/./node_modules/ramda/es/empty.js","webpack://fetchWatcher/./node_modules/ramda/es/takeLast.js","webpack://fetchWatcher/./node_modules/ramda/es/endsWith.js","webpack://fetchWatcher/./node_modules/ramda/es/eqBy.js","webpack://fetchWatcher/./node_modules/ramda/es/eqProps.js","webpack://fetchWatcher/./node_modules/ramda/es/evolve.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xfind.js","webpack://fetchWatcher/./node_modules/ramda/es/find.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xfindIndex.js","webpack://fetchWatcher/./node_modules/ramda/es/findIndex.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xfindLast.js","webpack://fetchWatcher/./node_modules/ramda/es/findLast.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xfindLastIndex.js","webpack://fetchWatcher/./node_modules/ramda/es/findLastIndex.js","webpack://fetchWatcher/./node_modules/ramda/es/flatten.js","webpack://fetchWatcher/./node_modules/ramda/es/flip.js","webpack://fetchWatcher/./node_modules/ramda/es/forEach.js","webpack://fetchWatcher/./node_modules/ramda/es/forEachObjIndexed.js","webpack://fetchWatcher/./node_modules/ramda/es/fromPairs.js","webpack://fetchWatcher/./node_modules/ramda/es/groupBy.js","webpack://fetchWatcher/./node_modules/ramda/es/groupWith.js","webpack://fetchWatcher/./node_modules/ramda/es/gt.js","webpack://fetchWatcher/./node_modules/ramda/es/gte.js","webpack://fetchWatcher/./node_modules/ramda/es/hasPath.js","webpack://fetchWatcher/./node_modules/ramda/es/has.js","webpack://fetchWatcher/./node_modules/ramda/es/hasIn.js","webpack://fetchWatcher/./node_modules/ramda/es/identical.js","webpack://fetchWatcher/./node_modules/ramda/es/ifElse.js","webpack://fetchWatcher/./node_modules/ramda/es/inc.js","webpack://fetchWatcher/./node_modules/ramda/es/includes.js","webpack://fetchWatcher/./node_modules/ramda/es/indexBy.js","webpack://fetchWatcher/./node_modules/ramda/es/indexOf.js","webpack://fetchWatcher/./node_modules/ramda/es/init.js","webpack://fetchWatcher/./node_modules/ramda/es/innerJoin.js","webpack://fetchWatcher/./node_modules/ramda/es/insert.js","webpack://fetchWatcher/./node_modules/ramda/es/insertAll.js","webpack://fetchWatcher/./node_modules/ramda/es/uniqBy.js","webpack://fetchWatcher/./node_modules/ramda/es/uniq.js","webpack://fetchWatcher/./node_modules/ramda/es/intersection.js","webpack://fetchWatcher/./node_modules/ramda/es/intersperse.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_objectAssign.js","webpack://fetchWatcher/./node_modules/ramda/es/objOf.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_stepCat.js","webpack://fetchWatcher/./node_modules/ramda/es/into.js","webpack://fetchWatcher/./node_modules/ramda/es/invert.js","webpack://fetchWatcher/./node_modules/ramda/es/invertObj.js","webpack://fetchWatcher/./node_modules/ramda/es/invoker.js","webpack://fetchWatcher/./node_modules/ramda/es/is.js","webpack://fetchWatcher/./node_modules/ramda/es/isEmpty.js","webpack://fetchWatcher/./node_modules/ramda/es/join.js","webpack://fetchWatcher/./node_modules/ramda/es/juxt.js","webpack://fetchWatcher/./node_modules/ramda/es/keysIn.js","webpack://fetchWatcher/./node_modules/ramda/es/lastIndexOf.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isNumber.js","webpack://fetchWatcher/./node_modules/ramda/es/length.js","webpack://fetchWatcher/./node_modules/ramda/es/lens.js","webpack://fetchWatcher/./node_modules/ramda/es/lensIndex.js","webpack://fetchWatcher/./node_modules/ramda/es/lensPath.js","webpack://fetchWatcher/./node_modules/ramda/es/lensProp.js","webpack://fetchWatcher/./node_modules/ramda/es/lt.js","webpack://fetchWatcher/./node_modules/ramda/es/lte.js","webpack://fetchWatcher/./node_modules/ramda/es/mapAccum.js","webpack://fetchWatcher/./node_modules/ramda/es/mapAccumRight.js","webpack://fetchWatcher/./node_modules/ramda/es/mapObjIndexed.js","webpack://fetchWatcher/./node_modules/ramda/es/match.js","webpack://fetchWatcher/./node_modules/ramda/es/mathMod.js","webpack://fetchWatcher/./node_modules/ramda/es/maxBy.js","webpack://fetchWatcher/./node_modules/ramda/es/sum.js","webpack://fetchWatcher/./node_modules/ramda/es/mean.js","webpack://fetchWatcher/./node_modules/ramda/es/median.js","webpack://fetchWatcher/./node_modules/ramda/es/memoizeWith.js","webpack://fetchWatcher/./node_modules/ramda/es/merge.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeAll.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeWithKey.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeDeepWithKey.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeDeepLeft.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeDeepRight.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeDeepWith.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeLeft.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeRight.js","webpack://fetchWatcher/./node_modules/ramda/es/mergeWith.js","webpack://fetchWatcher/./node_modules/ramda/es/min.js","webpack://fetchWatcher/./node_modules/ramda/es/minBy.js","webpack://fetchWatcher/./node_modules/ramda/es/modulo.js","webpack://fetchWatcher/./node_modules/ramda/es/move.js","webpack://fetchWatcher/./node_modules/ramda/es/multiply.js","webpack://fetchWatcher/./node_modules/ramda/es/negate.js","webpack://fetchWatcher/./node_modules/ramda/es/none.js","webpack://fetchWatcher/./node_modules/ramda/es/nthArg.js","webpack://fetchWatcher/./node_modules/ramda/es/o.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_of.js","webpack://fetchWatcher/./node_modules/ramda/es/of.js","webpack://fetchWatcher/./node_modules/ramda/es/omit.js","webpack://fetchWatcher/./node_modules/ramda/es/once.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_assertPromise.js","webpack://fetchWatcher/./node_modules/ramda/es/otherwise.js","webpack://fetchWatcher/./node_modules/ramda/es/over.js","webpack://fetchWatcher/./node_modules/ramda/es/pair.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_createPartialApplicator.js","webpack://fetchWatcher/./node_modules/ramda/es/partial.js","webpack://fetchWatcher/./node_modules/ramda/es/partialRight.js","webpack://fetchWatcher/./node_modules/ramda/es/partition.js","webpack://fetchWatcher/./node_modules/ramda/es/pathEq.js","webpack://fetchWatcher/./node_modules/ramda/es/pathOr.js","webpack://fetchWatcher/./node_modules/ramda/es/pathSatisfies.js","webpack://fetchWatcher/./node_modules/ramda/es/pick.js","webpack://fetchWatcher/./node_modules/ramda/es/pickAll.js","webpack://fetchWatcher/./node_modules/ramda/es/pickBy.js","webpack://fetchWatcher/./node_modules/ramda/es/pipeK.js","webpack://fetchWatcher/./node_modules/ramda/es/prepend.js","webpack://fetchWatcher/./node_modules/ramda/es/product.js","webpack://fetchWatcher/./node_modules/ramda/es/useWith.js","webpack://fetchWatcher/./node_modules/ramda/es/project.js","webpack://fetchWatcher/./node_modules/ramda/es/propEq.js","webpack://fetchWatcher/./node_modules/ramda/es/propIs.js","webpack://fetchWatcher/./node_modules/ramda/es/propOr.js","webpack://fetchWatcher/./node_modules/ramda/es/propSatisfies.js","webpack://fetchWatcher/./node_modules/ramda/es/props.js","webpack://fetchWatcher/./node_modules/ramda/es/range.js","webpack://fetchWatcher/./node_modules/ramda/es/reduceRight.js","webpack://fetchWatcher/./node_modules/ramda/es/reduceWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/reduced.js","webpack://fetchWatcher/./node_modules/ramda/es/times.js","webpack://fetchWatcher/./node_modules/ramda/es/repeat.js","webpack://fetchWatcher/./node_modules/ramda/es/replace.js","webpack://fetchWatcher/./node_modules/ramda/es/scan.js","webpack://fetchWatcher/./node_modules/ramda/es/sequence.js","webpack://fetchWatcher/./node_modules/ramda/es/set.js","webpack://fetchWatcher/./node_modules/ramda/es/sort.js","webpack://fetchWatcher/./node_modules/ramda/es/sortBy.js","webpack://fetchWatcher/./node_modules/ramda/es/sortWith.js","webpack://fetchWatcher/./node_modules/ramda/es/split.js","webpack://fetchWatcher/./node_modules/ramda/es/splitAt.js","webpack://fetchWatcher/./node_modules/ramda/es/splitEvery.js","webpack://fetchWatcher/./node_modules/ramda/es/splitWhen.js","webpack://fetchWatcher/./node_modules/ramda/es/startsWith.js","webpack://fetchWatcher/./node_modules/ramda/es/subtract.js","webpack://fetchWatcher/./node_modules/ramda/es/symmetricDifference.js","webpack://fetchWatcher/./node_modules/ramda/es/symmetricDifferenceWith.js","webpack://fetchWatcher/./node_modules/ramda/es/takeLastWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xtakeWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/takeWhile.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_xtap.js","webpack://fetchWatcher/./node_modules/ramda/es/tap.js","webpack://fetchWatcher/./node_modules/ramda/es/test.js","webpack://fetchWatcher/./node_modules/ramda/es/internal/_isRegExp.js","webpack://fetchWatcher/./node_modules/ramda/es/then.js","webpack://fetchWatcher/./node_modules/ramda/es/toLower.js","webpack://fetchWatcher/./node_modules/ramda/es/toPairs.js","webpack://fetchWatcher/./node_modules/ramda/es/toPairsIn.js","webpack://fetchWatcher/./node_modules/ramda/es/toUpper.js","webpack://fetchWatcher/./node_modules/ramda/es/transduce.js","webpack://fetchWatcher/./node_modules/ramda/es/transpose.js","webpack://fetchWatcher/./node_modules/ramda/es/traverse.js","webpack://fetchWatcher/./node_modules/ramda/es/trim.js","webpack://fetchWatcher/./node_modules/ramda/es/tryCatch.js","webpack://fetchWatcher/./node_modules/ramda/es/unapply.js","webpack://fetchWatcher/./node_modules/ramda/es/unary.js","webpack://fetchWatcher/./node_modules/ramda/es/uncurryN.js","webpack://fetchWatcher/./node_modules/ramda/es/unfold.js","webpack://fetchWatcher/./node_modules/ramda/es/union.js","webpack://fetchWatcher/./node_modules/ramda/es/uniqWith.js","webpack://fetchWatcher/./node_modules/ramda/es/unionWith.js","webpack://fetchWatcher/./node_modules/ramda/es/unless.js","webpack://fetchWatcher/./node_modules/ramda/es/unnest.js","webpack://fetchWatcher/./node_modules/ramda/es/until.js","webpack://fetchWatcher/./node_modules/ramda/es/valuesIn.js","webpack://fetchWatcher/./node_modules/ramda/es/view.js","webpack://fetchWatcher/./node_modules/ramda/es/when.js","webpack://fetchWatcher/./node_modules/ramda/es/where.js","webpack://fetchWatcher/./node_modules/ramda/es/whereEq.js","webpack://fetchWatcher/./node_modules/ramda/es/without.js","webpack://fetchWatcher/./node_modules/ramda/es/xprod.js","webpack://fetchWatcher/./node_modules/ramda/es/zip.js","webpack://fetchWatcher/./node_modules/ramda/es/zipObj.js","webpack://fetchWatcher/./node_modules/ramda/es/zipWith.js","webpack://fetchWatcher/./node_modules/ramda/es/thunkify.js","webpack://fetchWatcher/./node_modules/ramda/es/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","R","require","parseIteratorData","iteratorData","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","iterator","next","done","pair","err","curry","fetch","Watcher","window","url","arguments","length","config","shouldWatch","global","origin","_Watcher","emitReq","emitRes","headers","method","queryString","substring","indexOf","startsWith","query","URLSearchParams","body","FormData","JSON","parse","e","_body","params","mergeAll","console","error","status","promise","apply","then","res","clone","json","es_F","es_T","_","@@functional/placeholder","_isPlaceholder","a","_curry1","fn","f1","this","_curry2","f2","b","_b","_a","es_add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","es_curryN","es_addIndex","origFn","list","args","Array","slice","_curry3","f3","_c","es_adjust","_idx","_list","_isArray","isArray","val","toString","_isTransformer","obj","_dispatchable","methodNames","xf","pop","transducer","_reduced","x","@@transducer/value","@@transducer/reduced","_xfBase","init","_xall_XAll","XAll","f","all","input","es_all","es_max","_map","functor","len","_isString","internal_isArrayLike","nodeType","XWrap","acc","_xwrap","es_bind","thisObj","_iterableReduce","iter","step","_methodReduce","methodName","symIterator","_reduce","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","internal_xmap","_has","prop","_isArguments_toString","internal_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_map","es_path","paths","es_prop","es_pluck","es_reduce","es_allPass","preds","es_always","es_and","_xany_XAny","XAny","any","es_any","es_anyPass","es_ap","applyF","applyX","ap","_aperture","limit","_xaperture_XAperture","XAperture","pos","full","store","getCopy","es_aperture","es_append","el","es_apply","es_values","props","vals","mapValues","es_applySpec","applySpec","spec","v","es_applyTo","es_ascend","aa","bb","es_assoc","_isInteger","isInteger","es_isNil","es_assocPath","assocPath","path","nextObj","arr","concat","es_nAry","es_binary","_isFunction","es_liftN","arity","lifted","es_lift","es_both","g","es_curry","es_call","_makeFlat","recursive","flatt","jlen","j","ilen","internal_flatCat","rxf","@@transducer/init","@@transducer/result","@@transducer/step","ret","preservingReduced","es_chain","monad","es_clamp","min","max","_cloneRegExp","pattern","RegExp","source","ignoreCase","multiline","sticky","unicode","es_type","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","es_clone","es_comparator","pred","es_not","es_complement","_pipe","_checkForMethod","methodname","es_slice","fromIndex","toIndex","es_tail","Infinity","pipe","es_reverse","split","reverse","join","compose","composeK","last","_pipeP","ctx","pipeP","composeP","es_nth","offset","charAt","es_head","_identity","es_identity","es_pipeWith","headList","tailList","es_composeWith","_arrayFromIterator","push","_includesWith","internal_objectIs","is","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","match","typeA","equals","constructor","String","message","size","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","_includes","_quote","replace","pad","internal_toISOString","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter_XFilter","XFilter","es_filter","filterable","es_reject","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","es_toString","es_concat","es_cond","pairs","es_constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","es_construct","es_contains","es_converge","after","fns","context","_xreduceBy_XReduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","es_reduceBy","elt","es_countBy","elem","es_dec","es_defaultTo","es_descend","hasOrAdd","shouldAdd","set","prevSize","type","_items","_nativeSet","add","has","bIdx","internal_Set","_Set","Set","es_difference","first","second","out","firstLen","secondLen","toFilterOut","es_differenceWith","es_dissoc","es_remove","start","count","splice","es_update","es_dissocPath","dissocPath","head","tail","es_divide","_xdrop_XDrop","XDrop","es_drop","Math","_xtake_XTake","XTake","es_take","dropLast","_xdropLast_XDropLast","XDropLast","es_dropLast","dropLastWhile","_xdropLastWhile_XDropLastWhile","XDropLastWhile","retained","retain","flush","es_dropLastWhile","_xdropRepeatsWith_XDropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","internal_xdropRepeatsWith","es_last","es_dropRepeatsWith","es_dropRepeats","_xdropWhile_XDropWhile","XDropWhile","es_dropWhile","es_or","es_either","es_empty","empty","es_takeLast","es_endsWith","suffix","es_eqBy","es_eqProps","obj1","obj2","es_evolve","evolve","transformations","transformation","_xfind_XFind","XFind","found","es_find","_xfindIndex_XFindIndex","XFindIndex","es_findIndex","_xfindLast_XFindLast","XFindLast","es_findLast","_xfindLastIndex_XFindLastIndex","XFindLastIndex","lastIdx","es_findLastIndex","es_flatten","es_flip","es_forEach","es_forEachObjIndexed","keyList","es_fromPairs","es_groupBy","es_groupWith","nextidx","es_gt","es_gte","es_hasPath","_path","es_has","es_hasIn","es_identical","es_ifElse","condition","onTrue","onFalse","es_inc","es_includes","es_indexBy","es_indexOf","target","es_init","es_innerJoin","ys","es_insert","es_insertAll","elts","es_uniqBy","appliedItem","es_uniq","es_intersection","list1","list2","lookupList","filteredList","es_intersperse","separator","internal_objectAssign","assign","output","nextKey","es_objOf","_stepCatArray","_stepCatString","_stepCatObject","es_into","_stepCat","es_invert","es_invertObj","es_invoker","es_is","Ctor","es_isEmpty","es_join","es_juxt","es_keysIn","es_lastIndexOf","lastIndexOf","_isNumber","es_length","es_lens","setter","toFunctorFn","focus","es_lensIndex","es_lensPath","es_lensProp","es_lt","es_lte","es_mapAccum","tuple","es_mapAccumRight","es_mapObjIndexed","es_match","rx","str","es_mathMod","es_maxBy","es_sum","es_mean","es_median","width","es_memoizeWith","mFn","cache","es_merge","es_mergeAll","es_mergeWithKey","es_mergeDeepWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","es_mergeDeepLeft","es_mergeDeepRight","es_mergeDeepWith","es_mergeLeft","es_mergeRight","es_mergeWith","_l","_r","es_min","es_minBy","es_modulo","es_move","from","to","positiveFrom","positiveTo","es_multiply","es_negate","es_none","es_nthArg","es_o","_of","es_of","es_omit","names","index","es_once","called","_assertPromise","es_otherwise","Identity","map","es_over","lens","es_pair","fst","snd","_createPartialApplicator","es_partial","es_partialRight","es_partition","es_pathEq","es_pathOr","es_pathSatisfies","propPath","es_pick","es_pickAll","es_pickBy","pipeK","es_prepend","es_product","es_useWith","transformers","es_project","es_propEq","es_propIs","es_propOr","es_propSatisfies","es_props","ps","es_range","es_reduceRight","es_reduceWhile","es_reduced","es_times","RangeError","es_repeat","es_replace","regex","replacement","es_scan","es_sequence","of","traversable","sequence","es_set","es_sort","comparator","es_sortBy","es_sortWith","es_split","es_splitAt","array","es_splitEvery","es_splitWhen","prefix","es_startsWith","es_subtract","es_symmetricDifference","es_symmetricDifferenceWith","es_takeLastWhile","_xtakeWhile_XTakeWhile","XTakeWhile","es_takeWhile","_xtap_XTap","XTap","es_tap","es_test","es_then","es_toLower","es_toPairs","es_toPairsIn","es_toUpper","es_transduce","es_transpose","outerlist","innerlist","es_traverse","ws","es_trim","trim","beginRx","endRx","es_tryCatch","tryer","catcher","es_unapply","es_unary","es_uncurryN","depth","endIdx","currentDepth","es_unfold","seed","es_union","es_uniqWith","es_unionWith","es_unless","whenFalseFn","es_unnest","es_until","es_valuesIn","vs","Const","fantasy-land/map","es_view","es_when","whenTrueFn","es_where","testObj","es_whereEq","es_without","es_xprod","es_zip","rv","es_zipObj","es_zipWith","es_thunkify","fnArgs"],"mappings":"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","file":"fetch-watcher.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const R = require('ramda')\n\nfunction watcher(fetch, Watcher) {\n  window.fetch = (...args) => {\n    const url = args[0]\n    const config = args[1]\n    const shouldWatch = url !== Watcher.global.origin+'/receiver'\n    const { emitReq, emitRes } = Watcher()\n    if (shouldWatch) {\n      const headers = config && config.headers || {}\n      const method = config && config.method || 'GET'\n      let queryString = url.substring(url.indexOf('?'))\n      queryString = queryString.startsWith('?') ? queryString : ''\n      const query = parseIteratorData(new URLSearchParams(queryString))\n\n      let data = {}\n      if (config) {\n        const body = config.body\n        if (body instanceof FormData) {\n          data = parseIteratorData(body)\n        }\n        try {\n          data = JSON.parse(body)\n        } catch (e) {\n          data = {_body: body}\n        }\n      }\n\n      const params = R.mergeAll([query, data])\n      emitReq({headers, method, url, params}).catch(console.error)\n    }\n    const promise = fetch(...args)\n    if (shouldWatch) {\n      let status, headers\n      promise.then(res => {\n        status = res.status\n        headers = parseIteratorData(res.headers)\n        return res.clone().json()\n      }).then(data => {\n        emitRes({status, headers, data}).catch(console.error)\n      })\n    }\n    return promise\n  }\n}\n\nfunction parseIteratorData(iteratorData) {\n  const data = {}\n  for (let pair of iteratorData.entries()) {\n    data[pair[0]] = pair[1]\n  }\n  return data\n}\n\nexport default R.curry(watcher)","\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\nexport default F;","\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2.js';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat.js';\nimport _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray.js';\nimport _isTransformer from './_isTransformer.js';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xall from './internal/_xall.js';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has.js';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport _isArguments from './internal/_isArguments.js';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _map from './internal/_map.js';\nimport _reduce from './internal/_reduce.js';\nimport _xmap from './internal/_xmap.js';\nimport curryN from './curryN.js';\nimport keys from './keys.js';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\nimport prop from './prop.js';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xany from './internal/_xany.js';\n\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport map from './map.js';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat.js';\nimport _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture.js';\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xaperture from './internal/_xaperture.js';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1.js';\nimport apply from './apply.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\nimport keys from './keys.js';\nimport values from './values.js';\n\n// Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1.js';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport ap from './ap.js';\nimport curryN from './curryN.js';\nimport map from './map.js';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1.js';\nimport liftN from './liftN.js';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport and from './and.js';\nimport lift from './lift.js';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry.js';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike.js';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","import _forceReduced from './_forceReduced.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _makeFlat from './internal/_makeFlat.js';\nimport _xchain from './internal/_xchain.js';\nimport map from './map.js';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry2 from './_curry2.js';\nimport _flatCat from './_flatCat.js';\nimport map from '../map.js';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1.js';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp.js';\nimport type from '../type.js';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1.js';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift.js';\nimport not from './not.js';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray.js';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain.js';\nimport compose from './compose.js';\nimport map from './map.js';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity.js';\nimport _pipeP from './internal/_pipeP.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","import _curry2 from './internal/_curry2.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth.js';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1.js';\nimport _identity from './internal/_identity.js';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport head from './head.js';\nimport _reduce from './internal/_reduce.js';\nimport tail from './tail.js';\nimport identity from './identity.js';\n\n/**\n * Performs left-to-right function composition using transforming function. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, f(g, ...args)))\n */\nvar pipeWith = /*#__PURE__*/_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\nexport default pipeWith;","import _curry2 from './internal/_curry2.js';\nimport pipeWith from './pipeWith.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition using transforming function. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, f(i, ...args)))\n */\nvar composeWith = /*#__PURE__*/_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\nexport default composeWith;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals.js';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf.js';\n\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _filter from './internal/_filter.js';\nimport _isObject from './internal/_isObject.js';\nimport _reduce from './internal/_reduce.js';\nimport _xfilter from './internal/_xfilter.js';\nimport keys from './keys.js';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _includes from './_includes.js';\nimport _map from './_map.js';\nimport _quote from './_quote.js';\nimport _toISOString from './_toISOString.js';\nimport keys from '../keys.js';\nimport reject from '../reject.js';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1.js';\nimport _toString from './internal/_toString.js';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport _isFunction from './internal/_isFunction.js';\nimport _isString from './internal/_isString.js';\nimport toString from './toString.js';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport map from './map.js';\nimport max from './max.js';\nimport reduce from './reduce.js';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2.js';\nimport curry from './curry.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1.js';\nimport constructN from './constructN.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\nvar contains = /*#__PURE__*/_curry2(_includes);\nexport default contains;","import _curry2 from './internal/_curry2.js';\nimport _map from './internal/_map.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN.js';\nimport _has from './_has.js';\nimport _xfBase from './_xfBase.js';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _has from './internal/_has.js';\nimport _reduce from './internal/_reduce.js';\nimport _xreduceBy from './internal/_xreduceBy.js';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy.js';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add.js';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _includes from './_includes.js';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _curry2 from './internal/_curry2.js';\nimport _Set from './internal/_Set.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3.js';\nimport adjust from './adjust.js';\nimport always from './always.js';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\nexport default update;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\nimport _isArray from './internal/_isArray.js';\nimport assoc from './assoc.js';\nimport dissoc from './dissoc.js';\nimport remove from './remove.js';\nimport update from './update.js';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtake from './internal/_xtake.js';\nimport slice from './slice.js';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take.js';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLast from './internal/_dropLast.js';\nimport _xdropLast from './internal/_xdropLast.js';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice.js';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLastWhile from './internal/_dropLastWhile.js';\nimport _xdropLastWhile from './internal/_xdropLastWhile.js';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import nth from './nth.js';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport last from './last.js';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport dropRepeatsWith from './dropRepeatsWith.js';\nimport equals from './equals.js';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropWhile from './internal/_xdropWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport lift from './lift.js';\nimport or from './or.js';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1.js';\nimport _isArguments from './internal/_isArguments.js';\nimport _isArray from './internal/_isArray.js';\nimport _isObject from './internal/_isObject.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\nexport default empty;","import _curry2 from './internal/_curry2.js';\nimport drop from './drop.js';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport takeLast from './takeLast.js';\n\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindIndex from './internal/_xfindIndex.js';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLast from './internal/_xfindLast.js';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLastIndex from './internal/_xfindLastIndex.js';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1.js';\nimport _makeFlat from './internal/_makeFlat.js';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2.js';\nimport keys from './keys.js';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nexport default hasPath;","import _curry2 from './internal/_curry2.js';\nimport hasPath from './hasPath.js';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nexport default has;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import _objectIs from './internal/_objectIs.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nexport default identical;","import _curry3 from './internal/_curry3.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add.js';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\nvar includes = /*#__PURE__*/_curry2(_includes);\nexport default includes;","import reduceBy from './reduceBy.js';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2.js';\nimport _indexOf from './internal/_indexOf.js';\nimport _isArray from './internal/_isArray.js';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice.js';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\nimport _filter from './internal/_filter.js';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _Set from './internal/_Set.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity.js';\nimport uniqBy from './uniqBy.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport _filter from './internal/_filter.js';\nimport flip from './flip.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone.js';\nimport _curry3 from './internal/_curry3.js';\nimport _isTransformer from './internal/_isTransformer.js';\nimport _reduce from './internal/_reduce.js';\nimport _stepCat from './internal/_stepCat.js';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2.js';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker.js';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1.js';\nimport converge from './converge.js';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport equals from './equals.js';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1.js';\nimport lens from './lens.js';\nimport nth from './nth.js';\nimport update from './update.js';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1.js';\nimport assocPath from './assocPath.js';\nimport lens from './lens.js';\nimport path from './path.js';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1.js';\nimport assoc from './assoc.js';\nimport lens from './lens.js';\nimport prop from './prop.js';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport keys from './keys.js';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add.js';\nimport reduce from './reduce.js';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1.js';\nimport sum from './sum.js';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1.js';\nimport mean from './mean.js';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default merge;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3.js';\nimport _isObject from './internal/_isObject.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\nvar mergeLeft = /*#__PURE__*/_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\nexport default mergeLeft;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\nvar mergeRight = /*#__PURE__*/_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default mergeRight;","import _curry3 from './internal/_curry3.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport all from './all.js';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nexport default none;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport nth from './nth.js';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3.js';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1.js';\nimport _of from './internal/_of.js';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _isFunction from './_isFunction.js';\nimport _toString from './_toString.js';\n\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\nvar otherwise = /*#__PURE__*/_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\nexport default otherwise;","import _curry3 from './internal/_curry3.js';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity.js';\nimport _curry2 from './_curry2.js';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\nimport flip from './flip.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter.js';\nimport juxt from './juxt.js';\nimport reject from './reject.js';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\nimport path from './path.js';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3.js';\nimport defaultTo from './defaultTo.js';\nimport path from './path.js';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3.js';\nimport path from './path.js';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK.js';\nimport reverse from './reverse.js';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply.js';\nimport reduce from './reduce.js';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map.js';\nimport identity from './identity.js';\nimport pickAll from './pickAll.js';\nimport useWith from './useWith.js';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3.js';\nimport is from './is.js';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3.js';\nimport pathOr from './pathOr.js';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\nexport default propOr;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN.js';\nimport _reduce from './internal/_reduce.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2.js';\nimport always from './always.js';\nimport times from './times.js';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2.js';\nimport ap from './ap.js';\nimport map from './map.js';\nimport prepend from './prepend.js';\nimport reduceRight from './reduceRight.js';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3.js';\nimport always from './always.js';\nimport over from './over.js';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker.js';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2.js';\nimport length from './length.js';\nimport slice from './slice.js';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport take from './take.js';\n\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3.js';\nimport concat from './concat.js';\nimport differenceWith from './differenceWith.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtakeWhile from './internal/_xtakeWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtap from './internal/_xtap.js';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp.js';\nimport _curry2 from './internal/_curry2.js';\nimport _isRegExp from './internal/_isRegExp.js';\nimport toString from './toString.js';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.then(R.pick(['firstName', 'lastName']))\n *      );\n */\nvar then = /*#__PURE__*/_curry2(function then(f, p) {\n  _assertPromise('then', p);\n\n  return p.then(f);\n});\nexport default then;","import invoker from './invoker.js';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker.js';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce.js';\nimport _xwrap from './internal/_xwrap.js';\nimport curryN from './curryN.js';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3.js';\nimport map from './map.js';\nimport sequence from './sequence.js';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1.js';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? /*#__PURE__*/_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) : /*#__PURE__*/_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from './internal/_arity.js';\nimport _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n `` */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport compose from './compose.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _includesWith from './internal/_includesWith.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\nimport uniqWith from './uniqWith.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity.js';\nimport chain from './chain.js';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2.js';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport map from './map.js';\nimport where from './where.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport flip from './flip.js';\nimport reject from './reject.js';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","import curryN from './curryN.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify = /*#__PURE__*/_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","export { default as F } from './F.js';\nexport { default as T } from './T.js';\nexport { default as __ } from './__.js';\nexport { default as add } from './add.js';\nexport { default as addIndex } from './addIndex.js';\nexport { default as adjust } from './adjust.js';\nexport { default as all } from './all.js';\nexport { default as allPass } from './allPass.js';\nexport { default as always } from './always.js';\nexport { default as and } from './and.js';\nexport { default as any } from './any.js';\nexport { default as anyPass } from './anyPass.js';\nexport { default as ap } from './ap.js';\nexport { default as aperture } from './aperture.js';\nexport { default as append } from './append.js';\nexport { default as apply } from './apply.js';\nexport { default as applySpec } from './applySpec.js';\nexport { default as applyTo } from './applyTo.js';\nexport { default as ascend } from './ascend.js';\nexport { default as assoc } from './assoc.js';\nexport { default as assocPath } from './assocPath.js';\nexport { default as binary } from './binary.js';\nexport { default as bind } from './bind.js';\nexport { default as both } from './both.js';\nexport { default as call } from './call.js';\nexport { default as chain } from './chain.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as comparator } from './comparator.js';\nexport { default as complement } from './complement.js';\nexport { default as compose } from './compose.js';\nexport { default as composeK } from './composeK.js';\nexport { default as composeP } from './composeP.js';\nexport { default as composeWith } from './composeWith.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as construct } from './construct.js';\nexport { default as constructN } from './constructN.js';\nexport { default as contains } from './contains.js';\nexport { default as converge } from './converge.js';\nexport { default as countBy } from './countBy.js';\nexport { default as curry } from './curry.js';\nexport { default as curryN } from './curryN.js';\nexport { default as dec } from './dec.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as descend } from './descend.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as dissoc } from './dissoc.js';\nexport { default as dissocPath } from './dissocPath.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropLast } from './dropLast.js';\nexport { default as dropLastWhile } from './dropLastWhile.js';\nexport { default as dropRepeats } from './dropRepeats.js';\nexport { default as dropRepeatsWith } from './dropRepeatsWith.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as either } from './either.js';\nexport { default as empty } from './empty.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as eqBy } from './eqBy.js';\nexport { default as eqProps } from './eqProps.js';\nexport { default as equals } from './equals.js';\nexport { default as evolve } from './evolve.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flip } from './flip.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachObjIndexed } from './forEachObjIndexed.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as groupWith } from './groupWith.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as hasPath } from './hasPath.js';\nexport { default as head } from './head.js';\nexport { default as identical } from './identical.js';\nexport { default as identity } from './identity.js';\nexport { default as ifElse } from './ifElse.js';\nexport { default as inc } from './inc.js';\nexport { default as includes } from './includes.js';\nexport { default as indexBy } from './indexBy.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as init } from './init.js';\nexport { default as innerJoin } from './innerJoin.js';\nexport { default as insert } from './insert.js';\nexport { default as insertAll } from './insertAll.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersperse } from './intersperse.js';\nexport { default as into } from './into.js';\nexport { default as invert } from './invert.js';\nexport { default as invertObj } from './invertObj.js';\nexport { default as invoker } from './invoker.js';\nexport { default as is } from './is.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isNil } from './isNil.js';\nexport { default as join } from './join.js';\nexport { default as juxt } from './juxt.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as length } from './length.js';\nexport { default as lens } from './lens.js';\nexport { default as lensIndex } from './lensIndex.js';\nexport { default as lensPath } from './lensPath.js';\nexport { default as lensProp } from './lensProp.js';\nexport { default as lift } from './lift.js';\nexport { default as liftN } from './liftN.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapAccum } from './mapAccum.js';\nexport { default as mapAccumRight } from './mapAccumRight.js';\nexport { default as mapObjIndexed } from './mapObjIndexed.js';\nexport { default as match } from './match.js';\nexport { default as mathMod } from './mathMod.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as median } from './median.js';\nexport { default as memoizeWith } from './memoizeWith.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeAll } from './mergeAll.js';\nexport { default as mergeDeepLeft } from './mergeDeepLeft.js';\nexport { default as mergeDeepRight } from './mergeDeepRight.js';\nexport { default as mergeDeepWith } from './mergeDeepWith.js';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey.js';\nexport { default as mergeLeft } from './mergeLeft.js';\nexport { default as mergeRight } from './mergeRight.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as mergeWithKey } from './mergeWithKey.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as modulo } from './modulo.js';\nexport { default as move } from './move.js';\nexport { default as multiply } from './multiply.js';\nexport { default as nAry } from './nAry.js';\nexport { default as negate } from './negate.js';\nexport { default as none } from './none.js';\nexport { default as not } from './not.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as o } from './o.js';\nexport { default as objOf } from './objOf.js';\nexport { default as of } from './of.js';\nexport { default as omit } from './omit.js';\nexport { default as once } from './once.js';\nexport { default as or } from './or.js';\nexport { default as otherwise } from './otherwise.js';\nexport { default as over } from './over.js';\nexport { default as pair } from './pair.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as path } from './path.js';\nexport { default as pathEq } from './pathEq.js';\nexport { default as pathOr } from './pathOr.js';\nexport { default as pathSatisfies } from './pathSatisfies.js';\nexport { default as pick } from './pick.js';\nexport { default as pickAll } from './pickAll.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as pipe } from './pipe.js';\nexport { default as pipeK } from './pipeK.js';\nexport { default as pipeP } from './pipeP.js';\nexport { default as pipeWith } from './pipeWith.js';\nexport { default as pluck } from './pluck.js';\nexport { default as prepend } from './prepend.js';\nexport { default as product } from './product.js';\nexport { default as project } from './project.js';\nexport { default as prop } from './prop.js';\nexport { default as propEq } from './propEq.js';\nexport { default as propIs } from './propIs.js';\nexport { default as propOr } from './propOr.js';\nexport { default as propSatisfies } from './propSatisfies.js';\nexport { default as props } from './props.js';\nexport { default as range } from './range.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceBy } from './reduceBy.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reduceWhile } from './reduceWhile.js';\nexport { default as reduced } from './reduced.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as reverse } from './reverse.js';\nexport { default as scan } from './scan.js';\nexport { default as sequence } from './sequence.js';\nexport { default as set } from './set.js';\nexport { default as slice } from './slice.js';\nexport { default as sort } from './sort.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortWith } from './sortWith.js';\nexport { default as split } from './split.js';\nexport { default as splitAt } from './splitAt.js';\nexport { default as splitEvery } from './splitEvery.js';\nexport { default as splitWhen } from './splitWhen.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as symmetricDifference } from './symmetricDifference.js';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeLast } from './takeLast.js';\nexport { default as takeLastWhile } from './takeLastWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as test } from './test.js';\nexport { default as then } from './then.js';\nexport { default as times } from './times.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transduce } from './transduce.js';\nexport { default as transpose } from './transpose.js';\nexport { default as traverse } from './traverse.js';\nexport { default as trim } from './trim.js';\nexport { default as tryCatch } from './tryCatch.js';\nexport { default as type } from './type.js';\nexport { default as unapply } from './unapply.js';\nexport { default as unary } from './unary.js';\nexport { default as uncurryN } from './uncurryN.js';\nexport { default as unfold } from './unfold.js';\nexport { default as union } from './union.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as unless } from './unless.js';\nexport { default as unnest } from './unnest.js';\nexport { default as until } from './until.js';\nexport { default as update } from './update.js';\nexport { default as useWith } from './useWith.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as view } from './view.js';\nexport { default as when } from './when.js';\nexport { default as where } from './where.js';\nexport { default as whereEq } from './whereEq.js';\nexport { default as without } from './without.js';\nexport { default as xprod } from './xprod.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObj } from './zipObj.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default as thunkify } from './thunkify.js';"],"sourceRoot":""}